1 уровень сложности: Описание системы:
Система должна имитировать процесс обработки заказов в онлайн-магазине, где заказы поступают, обрабатываются и
отправляются клиентам. Приложение должно использовать несколько потоков для различных этапов обработки заказа.

Классы и их функциональность:


Заказ (Order)
Поля: идентификатор заказа, статус, список товаров.
Методы: добавление товара, изменение статуса заказа.


Обработчик Заказов (OrderProcessor)
Поля: очередь заказов (Queue).
Методы: добавление заказа в очередь (синхронизированный), извлечение заказа из очереди (синхронизированный).


Система Управления Заказами (OrderManagementSystem)
Поля: список обработчиков заказов, volatile флаг работы системы.
Методы: запуск и остановка системы, распределение заказов по обработчикам.


Логистический Центр (LogisticsCenter)
Поля: список готовых к отправке заказов (Queue).
Методы: добавление готового заказа (синхронизированный), отправка заказов.



Клиент (Client)
Поля: идентификатор клиента, список заказов.
Методы: создание нового заказа, отслеживание статуса заказа.

Потоки и их задачи:
Поток-генератор заказов (OrderGeneratorThread)
Создает новые заказы и добавляет их в систему управления заказами.


Поток обработки заказов (OrderProcessingThread)
Извлекает заказы из очереди обработчика заказов и обновляет их статус.


Поток логистики (LogisticsThread)


Переносит обработанные заказы в логистический центр для отправки.
Поток мониторинга (MonitoringThread)
Отслеживает общее состояние системы и выводит информацию о статусах заказов.


Требования к реализации:
Использовать synchronized блоки или методы для синхронизации доступа к общим ресурсам (например, очереди заказов).
Использовать volatile переменные для контроля состояния системы (например, для флага работы системы управления заказами).

